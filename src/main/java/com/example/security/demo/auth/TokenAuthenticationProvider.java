package com.example.security.demo.auth;

import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;

import com.example.security.demo.repository.UserInfoRepository;

/**
 * 提供驗證過程
 * @author user
 */
public class TokenAuthenticationProvider implements AuthenticationProvider {
	
	/**
	 * 使用者資料庫
	 */
	private UserInfoRepository userInfoRepository;

	@Override
	public Authentication authenticate(Authentication authentication) throws AuthenticationException {
		// extracting credentials from user.	
		authentication.getCredentials();
		
		// checking if the user is available. In general, checking if the user is exist in the repository.
		
		// 1.0 when the user is invalid, throwing exception.
		
		// 2.0 when the user is valid
		// 2_1 creating the new Authentication object
		// 2_2 setting a token which is generated by jwtService and Authentication object.
		
		throw new UnsupportedOperationException("TokenAuthenticationProvider.authenticate has not been  implemented.");
	}

	/**
	 * The “supports” method tells Spring’s AuthenticationManager what class of input Authentication this provider is capable of processing.
	 */
	@Override
	public boolean supports(Class<?> authentication) {
		return authentication.equals(TokenAuthentication.class);
	}

	



}
